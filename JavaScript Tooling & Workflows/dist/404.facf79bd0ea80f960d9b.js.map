{"version":3,"file":"404.facf79bd0ea80f960d9b.js","mappings":"wKAEA,cACEA,WAAAA,CAAYC,EAAeC,GAAe,GAEtCC,KAAKC,YADHH,EACiBI,SAASC,eAAeL,GAExBI,SAASE,KAE9BJ,KAAKD,aAAeA,CACtB,CAEAM,MAAAA,GACML,KAAKM,SACPN,KAAKM,QAAQC,QAGjB,CAEAC,MAAAA,GACER,KAAKC,YAAYQ,sBACfT,KAAKD,aAAe,aAAe,YACnCC,KAAKM,QAET,GCrBFI,QAAQC,IAAI,mBAEL,MAAMC,UAAgBC,EAC3BhB,WAAAA,CAAYiB,EAAuBC,EAAMjB,GACvCkB,MAAMlB,GACNE,KAAKiB,cAAgBH,EACrBd,KAAKe,KAAOA,EACZf,KAAKkB,QACP,CAEAC,aAAeA,KACbnB,KAAKK,SACLL,KAAKiB,eAAe,EAGtBC,MAAAA,GACE,MAAME,EAAiBlB,SAASmB,cAAc,OAC9CD,EAAeE,UAAY,OAC3B,MAAMC,EAAkBrB,SAASC,eAAe,WAC1CqB,EAActB,SAASuB,WAAWF,EAAgBG,SAAS,GACjEF,EAAYG,cAAc,KAAKC,YAAc5B,KAAKe,KAClDK,EAAeS,OAAOL,GAEtB,MAKMM,EALgB9B,KAAKC,YAAY8B,WAKb,GACpBC,EALehC,KAAKC,YAAYgC,UACjBjC,KAAKC,YAAYiC,aACPlC,KAAKC,YAAYkC,cAAcC,UAGG,GAEjEhB,EAAeiB,MAAMC,SAAW,WAChClB,EAAeiB,MAAME,KAAOT,EAAI,KAChCV,EAAeiB,MAAMG,IAAMR,EAAI,KAE/BZ,EAAeqB,iBAAiB,QAASzC,KAAKmB,cAC9CnB,KAAKM,QAAUc,CACjB,E","sources":["webpack://JavaScript Tooling & Workflows/./src/scripts/App/Component.js","webpack://JavaScript Tooling & Workflows/./src/scripts/App/Tooltip.js"],"sourcesContent":["export function doSomething() {}\n\nexport default class {\n  constructor(hostElementId, insertBefore = false) {\n    if (hostElementId) {\n      this.hostElement = document.getElementById(hostElementId);\n    } else {\n      this.hostElement = document.body;\n    }\n    this.insertBefore = insertBefore;\n  }\n\n  detach() {\n    if (this.element) {\n      this.element.remove();\n      // this.element.parentElement.removeChild(this.element);\n    }\n  }\n\n  attach() {\n    this.hostElement.insertAdjacentElement(\n      this.insertBefore ? \"afterbegin\" : \"beforeend\",\n      this.element\n    );\n  }\n}\n","// eslint-disable-next-line no-unused-vars\nimport Cmp, { doSomething } from \"./Component.js\";\n\nconsole.log(\"Tooltip running\");\n\nexport class Tooltip extends Cmp {\n  constructor(closeNotifierFunction, text, hostElementId) {\n    super(hostElementId);\n    this.closeNotifier = closeNotifierFunction;\n    this.text = text;\n    this.create();\n  }\n\n  closeTooltip = () => {\n    this.detach();\n    this.closeNotifier();\n  };\n\n  create() {\n    const tooltipElement = document.createElement(\"div\");\n    tooltipElement.className = \"card\";\n    const tooltipTemplate = document.getElementById(\"tooltip\");\n    const tooltipBody = document.importNode(tooltipTemplate.content, true);\n    tooltipBody.querySelector(\"p\").textContent = this.text;\n    tooltipElement.append(tooltipBody);\n\n    const hostElPosLeft = this.hostElement.offsetLeft;\n    const hostElPosTop = this.hostElement.offsetTop;\n    const hostElHeight = this.hostElement.clientHeight;\n    const parentElementScrolling = this.hostElement.parentElement.scrollTop;\n\n    const x = hostElPosLeft + 20;\n    const y = hostElPosTop + hostElHeight - parentElementScrolling - 10;\n\n    tooltipElement.style.position = \"absolute\";\n    tooltipElement.style.left = x + \"px\"; // 500px\n    tooltipElement.style.top = y + \"px\";\n\n    tooltipElement.addEventListener(\"click\", this.closeTooltip);\n    this.element = tooltipElement;\n  }\n}\n"],"names":["constructor","hostElementId","insertBefore","this","hostElement","document","getElementById","body","detach","element","remove","attach","insertAdjacentElement","console","log","Tooltip","Cmp","closeNotifierFunction","text","super","closeNotifier","create","closeTooltip","tooltipElement","createElement","className","tooltipTemplate","tooltipBody","importNode","content","querySelector","textContent","append","x","offsetLeft","y","offsetTop","clientHeight","parentElement","scrollTop","style","position","left","top","addEventListener"],"sourceRoot":""}